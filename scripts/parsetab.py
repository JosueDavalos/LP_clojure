
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'DEF NULL HASHMAP SORTEDMAP VECTOR CONJUNTO STR LOOP WHILE DO WHEN PRINTLN RECUR DEFN METODOFIRST LISTA METODONTH IF DOSEQ TRUE FALSE READLINE NOT AND OR ENTERO FLOTANTE CHAR STRING PAR_DER PAR_IZQ COR_DER COR_IZQ SUM REST PRODUCT DIVISION EQUAL NOT_EQUAL GREATER_THAN LESS_THAN GREATER_THAN_EQUAL LESS_THAN_EQUAL COM_SIM NOMBRE HASH LLAV_IZQ LLAV_DERalgoritmo : variable\n                 | expresion\n    variable : PAR_IZQ DEF NOMBRE expresion PAR_DERexpresion : valor\n                 | estructura\n                 | cadenaestructura : PAR_IZQ LISTA PAR_IZQ valor PAR_DER PAR_DER\n                  | COM_SIM PAR_IZQ valor PAR_DER\n    estructura : PAR_IZQ CONJUNTO COM_SIM PAR_IZQ valor PAR_DER PAR_DER\n                  | HASH LLAV_IZQ valor LLAV_DER\n    estructura : PAR_IZQ VECTOR valor PAR_DER\n                  | COR_IZQ valor COR_DER\n    estructura : LLAV_IZQ STRING STRING LLAV_DER\n                  | PAR_IZQ mapas STRING STRING PAR_DER\n    mapas : SORTEDMAP\n             | HASHMAP\n    valor : numero\n             | NOMBRE\n             | booleano\n    cadena : STRING\n              | PAR_IZQ STR STRING PAR_DER\n    booleano : TRUE\n                | FALSE\n    numero : ENTERO\n              | FLOTANTE\n    '
    
_lr_action_items = {'PAR_IZQ':([0,11,21,32,34,],[4,28,33,42,45,]),'NOMBRE':([0,14,20,23,28,29,32,33,45,],[5,5,32,5,5,5,5,5,5,]),'COM_SIM':([0,22,32,],[11,34,11,]),'HASH':([0,32,],[12,12,]),'COR_IZQ':([0,32,],[14,14,]),'LLAV_IZQ':([0,12,32,],[13,29,13,]),'STRING':([0,13,24,25,26,27,30,32,36,],[15,30,36,37,-15,-16,40,15,47,]),'ENTERO':([0,14,23,28,29,32,33,45,],[16,16,16,16,16,16,16,16,]),'FLOTANTE':([0,14,23,28,29,32,33,45,],[17,17,17,17,17,17,17,17,]),'TRUE':([0,14,23,28,29,32,33,45,],[18,18,18,18,18,18,18,18,]),'FALSE':([0,14,23,28,29,32,33,45,],[19,19,19,19,19,19,19,19,]),'$end':([1,2,3,5,6,7,8,9,10,15,16,17,18,19,41,46,48,49,50,51,52,55,56,58,],[0,-1,-2,-18,-4,-5,-6,-17,-19,-20,-24,-25,-22,-23,-12,-11,-21,-8,-10,-13,-3,-14,-7,-9,]),'DEF':([4,],[20,]),'LISTA':([4,42,],[21,21,]),'CONJUNTO':([4,42,],[22,22,]),'VECTOR':([4,42,],[23,23,]),'STR':([4,42,],[25,25,]),'SORTEDMAP':([4,42,],[26,26,]),'HASHMAP':([4,42,],[27,27,]),'COR_DER':([5,9,10,16,17,18,19,31,],[-18,-17,-19,-24,-25,-22,-23,41,]),'PAR_DER':([5,6,7,8,9,10,15,16,17,18,19,35,37,38,41,43,44,46,47,48,49,50,51,53,54,55,56,57,58,],[-18,-4,-5,-6,-17,-19,-20,-24,-25,-22,-23,46,48,49,-12,52,53,-11,55,-21,-8,-10,-13,56,57,-14,-7,58,-9,]),'LLAV_DER':([5,9,10,16,17,18,19,39,40,],[-18,-17,-19,-24,-25,-22,-23,50,51,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'algoritmo':([0,],[1,]),'variable':([0,],[2,]),'expresion':([0,32,],[3,43,]),'valor':([0,14,23,28,29,32,33,45,],[6,31,35,38,39,6,44,54,]),'estructura':([0,32,],[7,7,]),'cadena':([0,32,],[8,8,]),'numero':([0,14,23,28,29,32,33,45,],[9,9,9,9,9,9,9,9,]),'booleano':([0,14,23,28,29,32,33,45,],[10,10,10,10,10,10,10,10,]),'mapas':([4,42,],[24,24,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> algoritmo","S'",1,None,None,None),
  ('algoritmo -> variable','algoritmo',1,'p_algoritmo','implementation_nico.py',9),
  ('algoritmo -> expresion','algoritmo',1,'p_algoritmo','implementation_nico.py',10),
  ('variable -> PAR_IZQ DEF NOMBRE expresion PAR_DER','variable',5,'p_variable','implementation_nico.py',14),
  ('expresion -> valor','expresion',1,'p_expresion','implementation_nico.py',17),
  ('expresion -> estructura','expresion',1,'p_expresion','implementation_nico.py',18),
  ('expresion -> cadena','expresion',1,'p_expresion','implementation_nico.py',19),
  ('estructura -> PAR_IZQ LISTA PAR_IZQ valor PAR_DER PAR_DER','estructura',6,'p_estructura_lista','implementation_nico.py',22),
  ('estructura -> COM_SIM PAR_IZQ valor PAR_DER','estructura',4,'p_estructura_lista','implementation_nico.py',23),
  ('estructura -> PAR_IZQ CONJUNTO COM_SIM PAR_IZQ valor PAR_DER PAR_DER','estructura',7,'p_estructura_conjunto','implementation_nico.py',27),
  ('estructura -> HASH LLAV_IZQ valor LLAV_DER','estructura',4,'p_estructura_conjunto','implementation_nico.py',28),
  ('estructura -> PAR_IZQ VECTOR valor PAR_DER','estructura',4,'p_estructura_vector','implementation_nico.py',32),
  ('estructura -> COR_IZQ valor COR_DER','estructura',3,'p_estructura_vector','implementation_nico.py',33),
  ('estructura -> LLAV_IZQ STRING STRING LLAV_DER','estructura',4,'p_estructura_mapa','implementation_nico.py',37),
  ('estructura -> PAR_IZQ mapas STRING STRING PAR_DER','estructura',5,'p_estructura_mapa','implementation_nico.py',38),
  ('mapas -> SORTEDMAP','mapas',1,'p_mapas','implementation_nico.py',42),
  ('mapas -> HASHMAP','mapas',1,'p_mapas','implementation_nico.py',43),
  ('valor -> numero','valor',1,'p_valor','implementation_nico.py',47),
  ('valor -> NOMBRE','valor',1,'p_valor','implementation_nico.py',48),
  ('valor -> booleano','valor',1,'p_valor','implementation_nico.py',49),
  ('cadena -> STRING','cadena',1,'p_cadena','implementation_nico.py',53),
  ('cadena -> PAR_IZQ STR STRING PAR_DER','cadena',4,'p_cadena','implementation_nico.py',54),
  ('booleano -> TRUE','booleano',1,'p_booleano','implementation_nico.py',58),
  ('booleano -> FALSE','booleano',1,'p_booleano','implementation_nico.py',59),
  ('numero -> ENTERO','numero',1,'p_numero','implementation_nico.py',63),
  ('numero -> FLOTANTE','numero',1,'p_numero','implementation_nico.py',64),
]
